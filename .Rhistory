# Load required libraries
library(igraph)
library(ggplot2)
# Define the paths
zip_file_path <- "/Users/nautim/Desktop/Teaching/CSS Fall 24/assignments/HW2/lasftm_asia.zip"
extract_dir <- "/Users/nautim/Desktop/Teaching/CSS Fall 24/assignments/HW2/"
# Unzip the file
unzip(zip_file_path, exdir = extract_dir)
# Load the dataset (assuming you have unzipped the file)
edges <- read.csv(paste0(extract_dir, "/lasftm_asia/lastfm_asia_edges.csv"), header = FALSE)
# Load required libraries
library(igraph)
library(ggplot2)
# Define the paths
zip_file_path <- "/Users/nautim/Desktop/Teaching/CSS Fall 24/assignments/HW2/lasftm_asia.zip"
extract_dir <- "/Users/nautim/Desktop/Teaching/CSS Fall 24/assignments/HW2/"
# Unzip the file
unzip(zip_file_path, exdir = extract_dir)
# Load the dataset (assuming you have unzipped the file)
edges <- read.csv(paste0(extract_dir, "lasftm_asia/lastfm_asia_edges.csv"), header = FALSE)
# Load required libraries
library(igraph)
library(ggplot2)
# Define the paths
zip_file_path <- "/Users/nautim/Desktop/Teaching/CSS Fall 24/assignments/HW2/lasftm_asia.zip"
extract_dir <- "/Users/nautim/Desktop/Teaching/CSS Fall 24/assignments/HW2/"
# Unzip the file
unzip(zip_file_path, exdir = extract_dir)
# Unzip the file
unzip(zip_file_path, exdir = extract_dir)
file.exists(zip_file_path)
# Define the paths
zip_file_path <- "/Users/nautim/Desktop/Teaching/CSS Fall 24/assignments/HW2/lastfm_asia.zip"
file.exists(zip_file_path)
# Unzip the file
unzip(zip_file_path, exdir = extract_dir)
# Load required libraries
library(igraph)
library(ggplot2)
# Define the paths
zip_file_path <- "/Users/nautim/Desktop/Teaching/CSS Fall 24/assignments/HW2/lastfm_asia.zip"
extract_dir <- "/Users/nautim/Desktop/Teaching/CSS Fall 24/assignments/HW2/"
# Unzip the file
unzip(zip_file_path, exdir = extract_dir)
# Load the dataset (assuming you have unzipped the file)
edges <- read.csv(paste0(extract_dir, "lasftm_asia/lastfm_asia_edges.csv"), header = FALSE)
# Create an igraph object
g <- graph_from_data_frame(d=edges, directed = FALSE)
# Basic Info about the Network
cat("Number of nodes:", vcount(g), "\n")
cat("Number of edges:", ecount(g), "\n")
# Load required libraries
library(igraph)
library(jsonlite)
library(readr)
# Define the paths
zip_file_path <- "/Users/nautim/Desktop/Teaching/CSS Fall 24/assignments/HW2/lastfm_asia.zip"
extract_dir <- "/Users/nautim/Desktop/Teaching/CSS Fall 24/assignments/HW2/"
# Unzip the file
unzip(zip_file_path, exdir = extract_dir)
# Paths to the files
edge_list_path <- paste0(extract_dir, "lasftm_asia/lastfm_asia_edges.csv")
target_path <- paste0(extract_dir, "lastfm_asia/lastfm_asia_target.csv")
features_path <- paste0(extract_dir, "lastfm_asia/lastfm_asia_features.json")
# Load the datasets (assuming you have unzipped the file)
edges <- read.csv(edge_list_path, header = FALSE)
# Paths to the files
edge_list_path <- paste0(extract_dir, "lastfm_asia/lastfm_asia_edges.csv")
target_path <- paste0(extract_dir, "lastfm_asia/lastfm_asia_target.csv")
features_path <- paste0(extract_dir, "lastfm_asia/lastfm_asia_features.json")
# Load the datasets (assuming you have unzipped the file)
edges <- read.csv(edge_list_path, header = FALSE)
targets_df <- read_csv(target_path)
features <- fromJSON(features_path)
G <- graph_from_data_frame(edges, directed = FALSE)
# Add features to nodes
for (node in names(features)) {
V(G)[node]$features <- features[[node]]
}
# Add features to nodes
node_names <- V(G)$name
if (is.character(node_names)) {
node_names <- as.character(node_names)
} else {
node_names <- as.numeric(node_names)
}
for (node in names(features)) {
if (node %in% node_names) {
V(G)[node]$features <- list(features[[node]])  # Assign as a list or vector
}
}
# Basic Info about the Network
cat("Number of nodes:", vcount(G), "\n")
cat("Number of edges:", ecount(G), "\n")
cat("First few rows of targets:\n")
print(head(targets_df))
# Check features of a specific node (e.g., node '1')
node_id <- '1'
cat("Node", node_id, "has features:", V(G)[node_id]$features, "\n")
# Check features of a specific node (e.g., node '1')
node_id <- '1'
node_features <- V(G)[node_id]$features
cat("Node", node_id, "has features:", toString(node_features), "\n")
# Load required libraries
library(igraph)
library(jsonlite)
library(readr)
# Define the paths
zip_file_path <- "/Users/nautim/Desktop/Teaching/CSS Fall 24/assignments/HW2/lastfm_asia.zip"
extract_dir <- "/Users/nautim/Desktop/Teaching/CSS Fall 24/assignments/HW2/"
# Unzip the file
unzip(zip_file_path, exdir = extract_dir)
# Paths to the files
edge_list_path <- paste0(extract_dir, "lastfm_asia/lastfm_asia_edges.csv")
target_path <- paste0(extract_dir, "lastfm_asia/lastfm_asia_target.csv")
features_path <- paste0(extract_dir, "lastfm_asia/lastfm_asia_features.json")
# Load the datasets (assuming you have unzipped the file)
edges <- read.csv(edge_list_path, header = FALSE)
targets_df <- read_csv(target_path)
features <- fromJSON(features_path)
G <- graph_from_data_frame(edges, directed = FALSE)
# Add features to nodes
node_names <- V(G)$name
if (is.character(node_names)) {
node_names <- as.character(node_names)
} else {
node_names <- as.numeric(node_names)
}
for (node in names(features)) {
if (node %in% node_names) {
V(G)[node]$features <- list(features[[node]])
}
}
